[{"title":"JS for-in语句的使用","url":"/2018/03/26/JS-for-in语句的使用/","content":"\n## JS for-in语句的使用\n\n　　*  js中for循环一般用于遍历数组\n　　*  for-in一般用于循环遍历对象的属性 \n　　虽然数组在js中也是对象，技术上说，我们可以使用for-in循环数组，如下：\n```bash\n\tvar oSkin=document.getElementById(\"skin\").getElementsByTagName(\"LI\");\n\tfor(var p in oSkin){\n\t\talert(p);\n\t}\n```\n　　此时输出(假设oSkin包含了3个LI)为0,1,2,length,item,namedItem，原因为：for-in如果遍历的是数组，那么i是代表这个数组的索引值，如果遍历的是个对象，那么i代表的是这个数组的属性值。因为oSkin是个HTTPCollection对象，所以它是一个对象数组里面装了3个LI对象，于是就会既有索引值，又有它自己的属性。\n　　所以要想遍历该数组的三个LI，需要：\n```bash\n\tfor(var p in oSkin){\n\t\toSkin[p].doSomeThing();\n\t}\n```\n　　题外话：今天在经过了主题制作者大佬的点拨下，准备趁着在学校的最后一个学期用*Socket.io+JS*写一个*聊天室系统*，这样也算有个项目可以去实习了哈哈(想的挺美，可惜现在写不出来)，所以还是要务实基础啊，加油！\n"},{"title":"CSS 使用overflow:hidden清除浮动","url":"/2018/03/26/CSS-使用overflow-hidden清除浮动/","content":"\n## CSS 使用overflow:hidden清除浮动\n\n　　今天做了一道网页换肤的练习，但发现了其中的两个小问题，详情如下：\n```bash\n\t<div id=\"outer\">\n\t\t<ul id=\"skin\">\n\t\t\t<li id=\"red\" title=\"红色\"></li>\n\t\t\t<li id=\"green\" title=\"绿色\"></li>\n\t\t\t<li id=\"blue\" title=\"蓝色\"></li>\n\t\t</ul>\n\t\t<ul id=\"nav\">\n\t\t\t\t<!--\n                \tjavascript: 是一个伪协议javascript:是表示在触发<a>默认动作时，执行一段JavaScript代码，\n                \t而 javascript:;表示什么都不执行，这样点击<a>时就没有任何反应。\n                -->\n\t\t\t\t<li><a href=\"javascript:;\">新闻</a></li>\n\t\t\t\t<li><a href=\"javascript:;\">娱乐</a></li>\n\t\t\t\t<li><a href=\"javascript:;\">体育</a></li>\n\t\t\t\t<li><a href=\"javascript:;\">电影</a></li>\n\t\t\t\t<li><a href=\"javascript:;\">音乐</a></li>\n\t\t\t\t<li><a href=\"javascript:;\">旅游</a></li>\n\t\t</ul>\n\t</div>\n```\n　　在div里有两个ul，对它们的li分别都设置了float: left后发现：\n　　1.  这两个ul中的li都脱离了文档流，跑到一行上去了\n　　2.  为ul设置过黑色背景，但都消失了\n　　于是我使用了br来换行，但发现原作者并没有这样做，这不由得让我产生了疑问。在反复查看源码后，我发现是overflow: hidden;在起作用，遂到网上一查发现，它并不只有**隐藏溢出**的功能，还有**清除浮动**和**解除坍塌**的功能。原理如下：\n　　浮动的元素(两个ul中的li)脱离文档元素， 不占据空间，所以跑到了一行上。 不浮动的元素(ul,div)会直接无视掉这个元素。因为我们没有设置父ul的高度，父ul无视了自己的两个孩子，其高度变为0，所以父ul没有显现。 解决方法就是：\n　　1.  如果只想换行，给ul添加overflow:hidden属性即可，清除浮动，恢复它原先占据的ul的位置\n　　2.  为父ul添加overflow:hidden属性用以清除浮动，使得父ul显现\n\n　　若想更细致的查看该属性的用法：[详细链接](https://blog.csdn.net/hukaihe/article/details/51298665 \"深入理解：overflow:hidden——溢出,坍塌,清除浮动\")\n"},{"title":"JS中&&和||的奇怪用法","url":"/2018/03/25/JS中-和-的奇怪用法/","content":"## JS中&&和||的奇怪用法\n\n\n　　最近正在学 JS，找了点练习来做，然后看到如下的代码：\n```bash\n\tfor (var i = 0; i < oBtn.length; i++)\n\t{\n\t\toBtn[i].index = i;\n\t\toBtn[i].onclick = function ()\n\t\t{\n\t\tthis.index == oBtn.length - 1 && (oDiv.style.cssText = \"\");\n\t\tchangeStyle(oDiv, oAtt[this.index], oVal[this.index]);\n\t\t}\n\t}\n```\n　　然后我上网搜了一下明白了 var c=a||b;或var c=a&&b;这种情况时\n**a && b :如果执行 a 后返回 true，则执行 b 并返回 b 的值；如果执行 a 后返回 false，则整个表达式返回 a 的值，b 不执行**\n**a || b :如果执行 a 后返回 true，则整个表达式返回 a 的值，b 不执行；如果执行 a 后返回 false，则执行 b 并返回 b 的值**\n\n　　所以这句就好理解了this.index == oBtn.length - 1 && (oDiv.style.cssText = \"\");\n　　这可以算是一种炫技代码⊙﹏⊙，相当于：\n```bash\n\tif(this.index == oBtn.length - 1){\n\t\toDiv.style.cssText = \"\";\n\t}\n```"},{"title":"A Front-end newbie","url":"/2018/03/25/A-Front-end-newbie/","content":"## 新手上路啦\n\n　　忙活了三天搭起了个人的博客，虽然只是开了一个框架，但看到属于自己的页面那一刻，心情是很激动的.作为一只准备投身前端领域的小菜鸟，这一个月越发的感受到了前端的魅力，也见识了前端的深邃，自己目前的水平也就是刚对JS和CSS入了门，上论坛看大家讨论的一堆名词连听都没听说过，所以革命还需努力啦！  \n　　鉴于目前已大三下学期，马上就要找实习了，故在文章最后分享一下最近看到一句话：“你第一个月的工资=你之前看过的所有技术性书籍价值的总和”，我感觉这是非常有道理的，小时候读书少，现在有动力读相关技术的书了，也算是一个好兆头。\n　　最后分享一下搭建博客的过程中用到的教程：\n　　1.  GitHub搭建博客 [具体教程](https://blog.csdn.net/u012075670/article/details/54581015 \"如何用github搭建自己的个人网站\")\n　　2.  Hexo完善博客       [具体教程](https://www.cnblogs.com/visugar/p/6821777.html \"hexo从零开始到搭建完整\")\n　　3.  使用markdown来写博客(ps:要是想要段首缩进可以切换到输入法全角模式打两个空格) [语法参考](https://www.w3cschool.cn/markdownyfsm/cbx1e7.html \"Markdown 语法说明\")\n　　那今天就先到这里啦，我们下篇博客再会！\n"},{"title":"Hello World","url":"/2018/03/24/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n\n### Generate static files\n\n``` bash\n$ hexo generate or $ hexo g\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Debug\n\n``` bash\n$ hexo s --debug\n```\n\nMore info: [Server](https://hexo.io/zh-cn/docs/commands.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy or $ hexo d\n```\n\nMore info: [Deployment](https://hexo.io/docs/deployment.html)\n"}]